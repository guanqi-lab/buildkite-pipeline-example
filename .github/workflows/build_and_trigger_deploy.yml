# .github/workflows/build_and_trigger_deploy.yml

name: CI - Build and Push Docker Image

on:
  push:
    branches: [ "main" ]
    tags: [ 'v*.*.*' ]

env:
  REGISTRY: ghcr.io
  IMAGE_NAME: ${{ github.repository }}

jobs:
  build-push-and-dispatch:
    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write

    steps:
      # 1. 检出代码
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      # 2. 登录 GHCR
      - name: Log in to the Container registry
        uses: docker/login-action@v3
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      # 3. 手动获取短 Commit ID 和 Commit Message
      - name: Get Git metadata
        id: git_vars
        run: |
          echo "sha_short=$(git rev-parse --short HEAD)" >> $GITHUB_OUTPUT
          # 将 commit message 中的换行符等特殊字符进行 URL 编码，以安全地传递
          echo "commit_message=$(git log -1 --pretty=%s | sed -z 's/\n/\\n/g' | jq -s -R -r @uri)" >> $GITHUB_OUTPUT

      # 4. 提取 Docker 元数据
      - name: Extract metadata for Docker
        id: meta
        uses: docker/metadata-action@v5
        with:
          images: ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}
          tags: |
            # 规则1: 当事件是推送到一个分支时
            # 格式: {日期}.{分支名}.{commit_id}
            type=ref,value={{date 'YYYYMMDD'}}.{{tag}}.${{ steps.git_vars.outputs.sha_short }},event=tag

            # 规则2: 当事件是推送一个 Git 标签时
            # 格式: {日期}.{TAG号}.{commit_id}
            type=raw,value={{date 'YYYYMMDD'}}.{{branch}}.${{ steps.git_vars.outputs.sha_short }},event=branch,priority=200
      # 5. 构建并推送 Docker 镜像
      - name: Build and push Docker image
        uses: docker/build-push-action@v5
        with:
          context: .
          push: true
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}


  trigger-buildkite-deployment:
    needs: build-docker-image
    runs-on: ubuntu-latest
    steps:
      - name: Trigger Buildkite Deployment Pipeline
        uses: "buildkite/trigger-pipeline-action@v2.3.0" [ 28 ]
        with:
          # 必需：拥有 write_builds 权限的 Buildkite API 令牌
          buildkite_api_access_token: ${{ secrets.BUILDKITE_API_TOKEN }}

          # 必需：您的 Buildkite 流水线 slug
          pipeline: "guanqi/unipay-deploy"

          # 将当前提交的 SHA 传递给 Buildkite
          commit: ${{ github.sha }}

          # 确保 Buildkite 在正确的 git 分支上操作
          branch: ${{ github.ref_name }}

          # 自定义构建消息
          message: ":github: Deploy triggered by GitHub Actions"

          # 关键：将构建好的镜像标签作为环境变量传递给 Buildkite 作业
          build_env_vars: |
            {
              "DOCKER_IMAGE_TAG": "${{ needs.build-docker-image.outputs.image_tag }}"
            }